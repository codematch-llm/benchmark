index,domain_label,label,code,Source
4c5k,python,Array length,">>> print(len(['apple', 'orange']))
2
>>>",rosetta.csv
26lg,r,Array length,"a <- c('apple','orange')   
length(a)",rosetta.csv
17pg,sql,Array length,"SELECT COUNT() FROM (VALUES ('apple'),('orange'));",rosetta.csv
ie3o2,c,Sorting algorithms/Counting sort,"void counting_sort_mm(int *array, int n, int min, int max)
{
  int i, j, z;

  int range = max - min + 1;
  int *count = malloc(range * sizeof(*array));

  for(i = 0; i < range; i++) count[i] = 0;
  for(i = 0; i < n; i++) count[ array[i] - min ]++;

  for(i = min, z = 0; i <= max; i++) {
    for(j = 0; j < count[i - min]; j++) {
      array[z++] = i;
    }
  } 

  free(count);
}

void min_max(int *array, int n, int *min, int *max)
{
  int i;

  *min = *max = array[0];
  for(i=1; i < n; i++) {
    if ( array[i] < *min ) {
      *min = array[i];
    } else if ( array[i] > *max ) {
      *max = array[i];
    }
  }
}",rosetta.csv
qknx8,javascript,Sorting algorithms/Counting sort,"var countSort = function(arr, min, max) {
    var i, z = 0, count = [];

    for (i = min; i <= max; i++) {
        count[i] = 0;
    }

    for (i=0; i < arr.length; i++) {
        count[arr[i]]++;
    }

    for (i = min; i <= max; i++) {
        while (count[i]-- > 0) {
            arr[z++] = i;
        }
    }

}",rosetta.csv
z04tq,java,Sorting algorithms/Heapsort,"public static void heapSort(int[] a){
	int count = a.length;",rosetta.csv
l0cw,go,Archimedean spiral,"package main

import (
	""image""
	""image/color""
	""image/draw""
	""image/png""
	""log""
	""math""
	""os""
)

func main() {
	const (
		width, height = 600, 600
		centre        = width / 2.0
		degreesIncr   = 0.1 * math.Pi / 180
		turns         = 2
		stop          = 360 * turns * 10 * degreesIncr
		fileName      = ""spiral.png""
	)

	img := image.NewNRGBA(image.Rect(0, 0, width, height))",rosetta.csv
